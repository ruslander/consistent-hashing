/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.experimental.hashing;

import org.junit.Test;

// https://www.programmersought.com/article/5488133266/
// https://programmer.help/blogs/consistency-hash-algorithm-principle-and-java-implementation.html
// https://tom-e-white.com/2007/11/consistent-hashing.html
// https://techspot.zzzeek.org/2012/07/07/the-absolutely-simplest-consistent-hashing-example/
// https://www.acodersjourney.com/system-design-interview-consistent-hashing/

public class LibraryTest {
    @Test public void debugTest(){
        ConsistentHash ring = new ConsistentHash(new String[]{
                "192.168.0.0:111",
                "192.168.0.1:111",
                "192.168.0.2:111",
                "192.168.0.3:111",
                "192.168.0.4:111"}
        );

        ring.whatDoIHave();
    }

    @Test public void routeTest() {

        ConsistentHash ring = new ConsistentHash(new String[]{
                "192.168.0.0:111",
                "192.168.0.1:111",
                "192.168.0.2:111",
                "192.168.0.3:111",
                "192.168.0.4:111"}
                );

        System.out.println();

        String[] keys = {"127.0.0.1:1111", "221.226.0.1:2222", "10.211.0.1:3333"};

        for (int i = 0; i < keys.length; i++){
            String key = keys[i];

            String server = ring.get(key);

            System.out.println("[" + key + "] is routed to the node [" + server + "]");
        }
    }
}
